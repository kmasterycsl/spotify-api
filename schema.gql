# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Asset {
  id: ID!
  type: String!
  meta: AssetMetaUnion!
}

union AssetMetaUnion = ImageMeta | SoundMeta

type ImageMeta {
  source: String!
  dominantColor: String!
  width: Float!
  height: Float!
}

type SoundMeta {
  source: String!
  length: Float!
}

type PaginationMeta {
  itemCount: Float!
  totalItems: Float!
  itemsPerPage: Float!
  totalPages: Float!
  currentPage: Float!
}

type Album {
  id: ID!
  name: String!
  description: String!
  type: String!
  coverImageId: String!
  coverImage: Asset!
  artistId: String!
  allArtists: [Artist!]!
  tracks: [Track!]!
  isLiked: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Track {
  id: ID!
  name: String!
  albumId: String!
  sound: Asset!
  artists: [Artist!]!
  isLiked: Boolean!
  album: Album!
}

type PaginatedTrack {
  items: [Track!]!
  pageInfo: PaginationMeta!
}

type Artist {
  id: ID!
  name: String!
  biography: String!
  isVerified: Boolean!
  coverImageId: String!
  coverImage: Asset!
  avatarImageId: String!
  avatarImage: Asset!
  tracks(page: Int = 0, limit: Int = 10): PaginatedTrack!
  isLiked: Boolean!
}

type PaginatedArtist {
  items: [Artist!]!
  pageInfo: PaginationMeta!
}

type User {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserWithAccessToken {
  user: User!
  accessToken: String!
}

type Likeable {
  likeableId: String!
  likeableType: String!
  userId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  album: Album
  artist: Artist
  track: Track
}

type PaginatedLikeable {
  items: [Likeable!]!
  pageInfo: PaginationMeta!
}

type Query {
  artists(page: Int = 0, limit: Int = 10): PaginatedArtist!
  artist(id: String!): Artist!
  track(id: String!): Track!
  likeables(page: Int = 0, limit: Int = 10): PaginatedLikeable!
  album(id: String!): Album!
  whoAmI: User!
  user(id: String!): User!
}

type Mutation {
  like(likeableType: LikeableType!, likeableId: String!): Boolean!
  loginBySocialProvider(idToken: String!, providerId: String!): UserWithAccessToken!
}

enum LikeableType {
  TRACK
  ALBUM
  ARTIST
  PLAYLIST
}
